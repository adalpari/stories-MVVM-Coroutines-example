apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.adalpari.storiesexample"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":storiesview")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}"
    implementation "androidx.core:core-ktx:${versions.corektx}"
    implementation "androidx.activity:activity-ktx:${versions.activityktx}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"

    // Network dependencies
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:${versions.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"

    // dagger
    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:hilt-android:${versions.daggerHiltAndroid}"
    implementation "androidx.hilt:hilt-common:${versions.daggerHilt}"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:${versions.daggerHilt}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:hilt-android-compiler:${versions.daggerHiltAndroid}"
    kapt "androidx.hilt:hilt-compiler:${versions.daggerHilt}"

    testImplementation "junit:junit:${versions.junit}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitokotlin}"
    testImplementation "androidx.arch.core:core-testing:${versions.coretesting}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.testcoroutines}"
}

kapt {
    correctErrorTypes true
}